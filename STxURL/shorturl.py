import logging
import aiogram.utils.markdown as md
from aiogram import Bot, Dispatcher, types
from aiogram.contrib.middlewares.logging import LoggingMiddleware
import requests

API_TOKEN = '6483542043:AAFw6vDYOhrNQXaMKrl5Z-AXmB-odyF3NXg'  # Replace with your actual bot API token
bot = Bot(token=API_TOKEN)
dp = Dispatcher(bot)
logging.basicConfig(level=logging.INFO)
logging.getLogger(__name__)

# Start command handler
@dp.message_handler(commands=['start'])
async def on_start(message: types.Message):
    mention_html = md.quote_html(message.from_user.mention)
    await message.reply(f" ú·¥á è {mention_html} ! ü•≥\n\n"
                        f"·¥õ ú…™s …™s s·¥õx·¥õ…™…¥ è·¥ú Ä ü  ô·¥è·¥õ ·¥° ú…™·¥Ñ ú ·¥Ñ·¥Ä…¥ s ú·¥è Ä·¥õ ·¥Ä…¥ è  ü…™…¥·¥ã ·¥ús…™…¥…¢ ·¥õ…™…¥ è·¥ú Ä ü ·¥Ä·¥ò…™!\n\n"
                        f"·¥õ·¥è s ú·¥è Ä·¥õ ·¥Ä…¥ è ·¥ú Ä ü, ·¥ä·¥ús·¥õ s·¥á…¥·¥Ö ·¥ç·¥á ·¥õ ú·¥Ä·¥õ ·¥ú Ä ü  ú·¥á Ä·¥á ·¥Ä…¥·¥Ö …™ ·¥°…™ ü ü s ú·¥è Ä·¥õ …™·¥õ “ì·¥è Ä  è·¥è·¥ú! üòâ")

# URL shortening handler
@dp.message_handler(lambda message: message.text.startswith('http'))
async def shorten_url(message: types.Message):
    url = message.text.strip()
    try:
        response = requests.get(f'http://tinyurl.com/api-create.php?url={url}')
        short_url = response.text
        await message.reply(f" ú·¥á Ä·¥á's ·¥õ ú·¥á s ú·¥è Ä·¥õ ·¥ú Ä ü:\n{short_url}")
    except Exception as e:
        await message.reply("s·¥è Ä Ä è, ·¥õ ú·¥á Ä·¥á ·¥°·¥Äs ·¥Ä…¥ ·¥á Ä Ä·¥è Ä ·¥° ú…™ ü·¥á s ú·¥è Ä·¥õ·¥á…¥…™…¥…¢ ·¥õ ú·¥á ·¥ú Ä ü!")

if __name__ == '__main__':
    from aiogram import executor
    executor.start_polling(dp, skip_updates=True)
